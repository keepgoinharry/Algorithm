#include <bits/stdc++.h>
using namespace std;
vector<int> v;
vector<int> vv;
int N,M;

void dfs(int depth, vector<bool>& visited)
{
  if(depth==M)
  {
    for(auto i: vv)cout<<i<<" ";
    cout<<"\n";
    return;
  }

  for(int i=0; i<v.size(); i++)
    {
      if(!visited[v[i]])
      {
        visited[v[i]] = true;
        vv.push_back(v[i]);
        dfs(depth+1,visited);
        visited[v[i]] = false;
        vv.pop_back();
      }
    }
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cin>>N>>M;
  for(int i=0; i<N; i++)
    {
      int tmp;
      cin>>tmp;
      v.push_back(tmp);
    }
  sort(v.begin(),v.end());
  vector<bool> visited(10001,0);
  dfs(0,visited);
}

#include <bits/stdc++.h>
using namespace std;
using ll = long long;
int R,C;
ll answer = 0;

vector<vector<char>> graph;
vector<vector<bool>> visited;
int dx[4] = {0,0,-1,1};
int dy[4] = {-1,1,0,0};
map<char,bool> freq;
void dfs(int x,int y,ll num)
{
  answer = max(num,answer);
  for(int i=0; i<4; i++)
    {
      int nx = x + dx[i];
      int ny = y + dy[i];
      if(nx>=R||nx<0||ny>=C||ny<0)continue;
      if(!freq[graph[nx][ny]]&&!visited[nx][ny])
      {
        visited[nx][ny] = true;
        freq[graph[nx][ny]] = true;
        dfs(nx,ny,num+1);
        visited[nx][ny] = false;
        freq[graph[nx][ny]] = false;
      }
    }
}


int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cin>>R>>C;
  graph = vector<vector<char>>(R,vector<char>(C,' '));
  visited = vector<vector<bool>>(R,vector<bool>(C,0));
  
  for(int i=0; i<R; i++)
    {
      string s;
      cin>>s;
      for(int j=0; j<C; j++)graph[i][j] = s[j];
    }
  
  freq[graph[0][0]] = true;
  visited[0][0] = true;
  dfs(0,0,0);
  cout<<answer+1;
}

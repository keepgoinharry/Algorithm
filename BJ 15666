#include <bits/stdc++.h>
using namespace std;

int N,M;
vector<int> v;
vector<int> visited;
vector<int> tmp;
vector<vector<int>> freq;


bool check(vector<int> tmp)
{
    for(int i=0; i<freq.size(); i++)
        {
            if(freq[i]==tmp)
            {
                return false;
            }
        }
    return true;
}


void dfs(int depth, int prev)
{
    if(depth == M)
    {
        for(auto i:tmp)cout<<i<<" ";
        cout<<"\n";
        return;
    }

    int prevv = -1;
    for(int i=0; i<v.size(); i++)
        {
            if(v[i]>=prev&&v[i]!=prevv)
            {
                tmp.push_back(v[i]);
                dfs(depth+1,v[i]);
                tmp.pop_back();
                prevv = v[i];
            }
        }
    
}
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    cin>>N>>M;
    visited = vector<int>(N,0);

    for(int i=0; i<N; i++)
        {
            int a;
            cin>>a;
            v.push_back(a);
        }
    sort(v.begin(),v.end());
    dfs(0,0);
    
}

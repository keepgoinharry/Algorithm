#include <bits/stdc++.h>
using namespace std;
vector<int> answer;
int N;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    cin>>N;
    
    vector<vector<int>> graph(N);
    vector<vector<int>> parent(N,vector<int>(10,0));
    
    vector<vector<bool>> dp(N,vector<bool>(10,0));

    for(int i=0; i<N; i++)
        {
            int cnt;cin>>cnt;
            vector<int> tmp;
            for(int j=0; j<cnt; j++)
                {
                    int num;cin>>num;
                    tmp.push_back(num);
                }
            graph[i] = tmp;
        }

    for(int cur:graph[0])
        {
            dp[0][cur] = true;
            parent[0][cur] = -1;
        }

    for(int i=1; i<graph.size(); i++)
        {
            for(int cur : graph[i])
                {
                    for(int prev:graph[i-1])
                        {
                            if(cur!=prev&&dp[i-1][prev])
                            {
                                dp[i][cur] = true;
                                parent[i][cur] = prev;
                            }
                        }
                }
        }
    int able = -1;
    for(int i:graph[N-1])if(i)able = i;
    if(able==-1)cout<<-1;

    vector<int> answer(N);

    for(int i=N-1; i>=0; i--)
        {
            answer[i] = able;
            able = parent[i][able];
        }

    for(int x : answer) cout << x << "\n";
}

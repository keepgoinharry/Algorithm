#include <bits/stdc++.h>
using namespace std;

int dx[4] = {0,0,-1,1};   // 좌우상하 (x: col)
int dy[4] = {1,-1,0,0};   // 좌우상하 (y: row)
bool graph[50][50];       // 배추밭

void bfs(int sy, int sx, int N, int M) {
    queue<pair<int,int>> q;
    q.push({sy, sx});
    graph[sy][sx] = 0; // 방문 처리
    
    while(!q.empty()) {
        int cy = q.front().first;
        int cx = q.front().second;
        q.pop();
        
        for(int i=0; i<4; i++) {
            int ny = cy + dy[i];
            int nx = cx + dx[i];
            
            // 범위 체크 (세로 = N, 가로 = M)
            if(ny < 0 || ny >= N || nx < 0 || nx >= M) continue;
            
            if(graph[ny][nx]) {
                graph[ny][nx] = 0;
                q.push({ny, nx});
            }
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int T; 
    cin >> T;
    
    while(T--) {
        int M, N, K; // M=가로, N=세로
        cin >> M >> N >> K;
        
        memset(graph, 0, sizeof(graph)); // 초기화
        
        for(int i=0; i<K; i++) {
            int x, y;
            cin >> x >> y;
            graph[y][x] = 1; // (x,y) → (col, row)
        }
        
        int cnt = 0;
        for(int i=0; i<N; i++) {
            for(int j=0; j<M; j++) {
                if(graph[i][j]) {
                    bfs(i, j, N, M);
                    cnt++;
                }
            }
        }
        cout << cnt << "\n";
    }
}

#include <bits/stdc++.h>
using namespace std;
using ll = long long;
int N;
int answer = 0;
vector<vector<int>> graph;
//status 1가로 2세로 3대각
int gx[2]={0,1};
int gy[2]={1,1};

int sx[2]={1,1};
int sy[2]={0,1};

int dx[3]={0,1,1};
int dy[3]={1,0,1};


void dfs(int x,int y,int status){
  if(x==N-1&&y==N-1){
    answer++;
    return;
  }
  if(status==1)
  {
    for(int i=0; i<2; i++)
    {
      if(i==0)
      {
        int nx = gx[i] + x;
        int ny = gy[i] + y;
        if(nx>=N||ny>=N)continue;
        if(graph[nx][ny]==0)
        {
          dfs(nx,ny,1);
        }
      }
      else if(i==1)
      {
        int nx = gx[i] + x;
        int ny = gy[i] + y;
        if(nx>=N||ny>=N)continue;
        if(graph[nx][ny]==0&&graph[nx-1][ny]==0&&graph[nx][ny-1]==0)
        {
          dfs(nx,ny,3);
        }
      }
    }
  }
  else if(status==2)
  {
    for(int i=0; i<2; i++)
    {
      if(i==0)
      {
        int nx = sx[i] + x;
        int ny = sy[i] + y;
        if(nx>=N||ny>=N)continue;
        if(graph[nx][ny]==0)
        {
          dfs(nx,ny,2);
        }
      }
      else
      {
        int nx = sx[i] + x;
        int ny = sy[i] + y;
        if(nx>=N||ny>=N)continue;
        if(graph[nx][ny]==0&&graph[nx-1][ny]==0&&graph[nx][ny-1]==0)
        {
          dfs(nx,ny,3);
        }
      }
    }
  }
  else if(status==3)
  {
    for(int i=0; i<3; i++)
    {
      if(i==0)
      {
        int nx = dx[i] + x;
        int ny = dy[i] + y;
        if(nx>=N||ny>=N)continue;
        if(graph[nx][ny]==0)
        {
          dfs(nx,ny,1);
        }
      }
      else if(i==1)
      {
        int nx = dx[i] + x;
        int ny = dy[i] + y;
        if(nx>=N||ny>=N)continue;
        if(graph[nx][ny]==0)
        {
          dfs(nx,ny,2);
        }
      }
      else if(i==2)
      {
        int nx = dx[i] + x;
        int ny = dy[i] + y;
        if(nx>=N||ny>=N)continue;
        if(graph[nx][ny]==0&&graph[nx-1][ny]==0&&graph[nx][ny-1]==0)
        {
          dfs(nx,ny,3);
        }
      }
    }
  }  
}
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    cin>>N;
    
    graph = vector<vector<int>>(N,vector<int>(N,0));
  
    for(int i=0; i<N; i++){      
      for(int j=0; j<N; j++){
        cin>>graph[i][j];
      } 
    }

  dfs(0,1,1);
  cout<<answer;
  
}
